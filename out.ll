; ModuleID = 'ps2'
source_filename = "ps2"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-unknown-unknown"

%target.Target.Cpu.Feature.Set = type { [5 x i64] }
%target.Target.Cpu.Model = type { { ptr, i64 }, { ptr, i64 }, %target.Target.Cpu.Feature.Set }
%target.Target.Cpu = type { ptr, %target.Target.Cpu.Feature.Set, i6, [7 x i8] }

@builtin.zig_backend = internal unnamed_addr constant i64 2, align 8
@target.Target.Cpu.Feature.Set.empty = internal unnamed_addr constant %target.Target.Cpu.Feature.Set zeroinitializer, align 8
@target.x86.cpu.x86_64 = internal unnamed_addr constant %target.Target.Cpu.Model { { ptr, i64 } { ptr @target.x86.cpu.x86_64__anon_515, i64 6 }, { ptr, i64 } { ptr @target.x86.cpu.x86_64__anon_516, i64 6 }, %target.Target.Cpu.Feature.Set { [5 x i64] [i64 37383395344400, i64 -4611686013930960896, i64 285213184, i64 0, i64 0] } }, align 8
@target.x86.cpu.x86_64__anon_515 = internal unnamed_addr constant [7 x i8] c"x86_64\00", align 1
@target.x86.cpu.x86_64__anon_516 = internal unnamed_addr constant [7 x i8] c"x86-64\00", align 1
@builtin.cpu = internal unnamed_addr constant %target.Target.Cpu { ptr @target.x86.cpu.x86_64, %target.Target.Cpu.Feature.Set { [5 x i64] [i64 37383395344400, i64 -4611686013930960896, i64 285213440, i64 0, i64 0] }, i6 -27, [7 x i8] undef }, align 8
@start.simplified_logic = internal unnamed_addr constant i1 false, align 1
@builtin.output_mode = internal unnamed_addr constant i2 0, align 1
@builtin.link_libc = internal unnamed_addr constant i1 false, align 1
@builtin.os = internal unnamed_addr global { { [168 x i8], i2, [7 x i8] }, i6, [7 x i8] } { { [168 x i8], i2, [7 x i8] } { [168 x i8] undef, i2 0, [7 x i8] undef }, i6 0, [7 x i8] undef }, align 8
@start.native_os = internal unnamed_addr constant i6 0, align 1
@start.native_arch = internal unnamed_addr constant i6 -27, align 1
@isr.register_isr = external global ptr
@main.main__anon_975 = internal unnamed_addr constant [4 x i8] c"ps2\00", align 1
@name.kernel_func = external global ptr
@lib.isr.register_isr = internal unnamed_addr constant ptr @isr.register_isr, align 8
@lib.name.kernel_func = internal unnamed_addr constant ptr @name.kernel_func, align 8
@lib.task.yield = internal unnamed_addr constant ptr @task.yield, align 8
@task.yield = external global ptr

; Function Attrs: nounwind
define dso_local void @main() #0 !dbg !270 {
Entry:
  %0 = alloca ptr, align 8, !dbg !278
  %1 = call i8 @isr.register_isr(i16 zeroext 1, ptr nonnull readonly align 1 @main.handler), !dbg !278
  store ptr @main.main__anon_975, ptr %0, align 8, !dbg !279
  call void @llvm.dbg.declare(metadata ptr %0, metadata !275, metadata !DIExpression()), !dbg !279
  br label %Loop, !dbg !279

Loop:                                             ; preds = %Loop, %Entry
  call void @name.kernel_func(ptr nonnull readonly align 1 @main.main__anon_975, i64 3), !dbg !280
  br label %Loop, !dbg !280
}

; Function Attrs: nounwind
define internal fastcc i1 @main.handler(ptr nonnull align 8 %0) unnamed_addr #0 !dbg !283 {
Entry:
  %1 = alloca i16, align 2
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !304, metadata !DIExpression()), !dbg !308
  store i16 96, ptr %1, align 2, !dbg !309
  call void @llvm.dbg.declare(metadata ptr %1, metadata !305, metadata !DIExpression()), !dbg !309
  %3 = call i8 asm sideeffect "inb ${1}, ${0}", "=r,{dx},~{dirflag},~{fpsr},~{flags}"(i16 96), !dbg !310
  ret i1 true, !dbg !313
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
define dso_local void @driver_main_stub() #0 !dbg !314 {
Entry:
  call void @main(), !dbg !317
  ret void, !dbg !317
}

attributes #0 = { nounwind "frame-pointer"="all" "probe-stack"="__zig_probe_stack" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 2, !"Dwarf Version", i32 4}
!2 = !{i32 1, !"Code Model", i32 4}
!3 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4, producer: "zig 0.12.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5, globals: !223)
!4 = !DIFile(filename: "ps2", directory: "C:\\dev\\zig_kernel\\drivers\\block\\ps2\\src")
!5 = !{!6, !22, !111, !117, !149, !156}
!6 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "builtin.CompilerBackend", scope: !7, file: !7, line: 961, baseType: !8, size: 64, align: 64, elements: !9)
!7 = !DIFile(filename: "builtin.zig", directory: "C:\\bin\\lib\\std")
!8 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!9 = !{!10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21}
!10 = !DIEnumerator(name: "other", value: 0, isUnsigned: true)
!11 = !DIEnumerator(name: "stage1", value: 1, isUnsigned: true)
!12 = !DIEnumerator(name: "stage2_llvm", value: 2, isUnsigned: true)
!13 = !DIEnumerator(name: "stage2_c", value: 3, isUnsigned: true)
!14 = !DIEnumerator(name: "stage2_wasm", value: 4, isUnsigned: true)
!15 = !DIEnumerator(name: "stage2_arm", value: 5, isUnsigned: true)
!16 = !DIEnumerator(name: "stage2_x86_64", value: 6, isUnsigned: true)
!17 = !DIEnumerator(name: "stage2_aarch64", value: 7, isUnsigned: true)
!18 = !DIEnumerator(name: "stage2_x86", value: 8, isUnsigned: true)
!19 = !DIEnumerator(name: "stage2_riscv64", value: 9, isUnsigned: true)
!20 = !DIEnumerator(name: "stage2_sparc64", value: 10, isUnsigned: true)
!21 = !DIEnumerator(name: "stage2_spirv64", value: 11, isUnsigned: true)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "target.Target.Cpu.Arch", scope: !24, file: !23, line: 3043, baseType: !48, size: 8, align: 8, elements: !49)
!23 = !DIFile(filename: "target.zig", directory: "C:\\bin\\lib\\std")
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Cpu", size: 448, align: 64, elements: !25)
!25 = !{!26, !46, !47}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !24, baseType: !27, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*target.Target.Cpu.Model", baseType: !28, size: 64, align: 64)
!28 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Cpu.Model", size: 576, align: 64, elements: !29)
!29 = !{!30, !38, !39}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !28, baseType: !31, size: 128, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]u8", size: 128, align: 64, elements: !32)
!32 = !{!33, !36}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !31, baseType: !34, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !35, size: 64, align: 8)
!35 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !31, baseType: !37, size: 64, align: 64, offset: 64)
!37 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "llvm_name", scope: !28, baseType: !31, size: 128, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !28, baseType: !40, size: 320, align: 64, offset: 256)
!40 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Cpu.Feature.Set", size: 320, align: 64, elements: !41)
!41 = !{!42}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "ints", scope: !40, baseType: !43, size: 320, align: 64)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, align: 64, elements: !44)
!44 = !{!45}
!45 = !DISubrange(count: 5, lowerBound: 0)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !24, baseType: !40, size: 320, align: 64, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !24, baseType: !22, size: 8, align: 8, offset: 384)
!48 = !DIBasicType(name: "u6", size: 8, encoding: DW_ATE_unsigned)
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110}
!50 = !DIEnumerator(name: "arm", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "armeb", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "aarch64", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "aarch64_be", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "aarch64_32", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "arc", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "avr", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "bpfel", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "bpfeb", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "csky", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "dxil", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "hexagon", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "loongarch32", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "loongarch64", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "m68k", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "mips", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "mipsel", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "mips64", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "mips64el", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "msp430", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "powerpc", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "powerpcle", value: 21, isUnsigned: true)
!72 = !DIEnumerator(name: "powerpc64", value: 22, isUnsigned: true)
!73 = !DIEnumerator(name: "powerpc64le", value: 23, isUnsigned: true)
!74 = !DIEnumerator(name: "r600", value: 24, isUnsigned: true)
!75 = !DIEnumerator(name: "amdgcn", value: 25, isUnsigned: true)
!76 = !DIEnumerator(name: "riscv32", value: 26, isUnsigned: true)
!77 = !DIEnumerator(name: "riscv64", value: 27, isUnsigned: true)
!78 = !DIEnumerator(name: "sparc", value: 28, isUnsigned: true)
!79 = !DIEnumerator(name: "sparc64", value: 29, isUnsigned: true)
!80 = !DIEnumerator(name: "sparcel", value: 30, isUnsigned: true)
!81 = !DIEnumerator(name: "s390x", value: 31, isUnsigned: true)
!82 = !DIEnumerator(name: "tce", value: 32, isUnsigned: true)
!83 = !DIEnumerator(name: "tcele", value: 33, isUnsigned: true)
!84 = !DIEnumerator(name: "thumb", value: 34, isUnsigned: true)
!85 = !DIEnumerator(name: "thumbeb", value: 35, isUnsigned: true)
!86 = !DIEnumerator(name: "x86", value: 36, isUnsigned: true)
!87 = !DIEnumerator(name: "x86_64", value: 37, isUnsigned: true)
!88 = !DIEnumerator(name: "xcore", value: 38, isUnsigned: true)
!89 = !DIEnumerator(name: "xtensa", value: 39, isUnsigned: true)
!90 = !DIEnumerator(name: "nvptx", value: 40, isUnsigned: true)
!91 = !DIEnumerator(name: "nvptx64", value: 41, isUnsigned: true)
!92 = !DIEnumerator(name: "le32", value: 42, isUnsigned: true)
!93 = !DIEnumerator(name: "le64", value: 43, isUnsigned: true)
!94 = !DIEnumerator(name: "amdil", value: 44, isUnsigned: true)
!95 = !DIEnumerator(name: "amdil64", value: 45, isUnsigned: true)
!96 = !DIEnumerator(name: "hsail", value: 46, isUnsigned: true)
!97 = !DIEnumerator(name: "hsail64", value: 47, isUnsigned: true)
!98 = !DIEnumerator(name: "spir", value: 48, isUnsigned: true)
!99 = !DIEnumerator(name: "spir64", value: 49, isUnsigned: true)
!100 = !DIEnumerator(name: "spirv32", value: 50, isUnsigned: true)
!101 = !DIEnumerator(name: "spirv64", value: 51, isUnsigned: true)
!102 = !DIEnumerator(name: "kalimba", value: 52, isUnsigned: true)
!103 = !DIEnumerator(name: "shave", value: 53, isUnsigned: true)
!104 = !DIEnumerator(name: "lanai", value: 54, isUnsigned: true)
!105 = !DIEnumerator(name: "wasm32", value: 55, isUnsigned: true)
!106 = !DIEnumerator(name: "wasm64", value: 56, isUnsigned: true)
!107 = !DIEnumerator(name: "renderscript32", value: 57, isUnsigned: true)
!108 = !DIEnumerator(name: "renderscript64", value: 58, isUnsigned: true)
!109 = !DIEnumerator(name: "ve", value: 59, isUnsigned: true)
!110 = !DIEnumerator(name: "spu_2", value: 60, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "builtin.OutputMode", scope: !7, file: !7, line: 632, baseType: !112, size: 8, align: 8, elements: !113)
!112 = !DIBasicType(name: "u2", size: 8, encoding: DW_ATE_unsigned)
!113 = !{!114, !115, !116}
!114 = !DIEnumerator(name: "Exe", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "Lib", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "Obj", value: 2, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "target.Target.Os.WindowsVersion", scope: !118, file: !23, line: 443, baseType: !202, size: 32, align: 32, elements: !203)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Os", size: 1472, align: 64, elements: !119)
!119 = !{!120, !155}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "version_range", scope: !118, baseType: !121, size: 1408, align: 64)
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Os.VersionRange", size: 1408, align: 64, elements: !122)
!122 = !{!123, !148}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !121, baseType: !124, size: 1344, align: 64)
!124 = !DICompositeType(tag: DW_TAG_union_type, name: "target.Target.Os.VersionRange:Payload", size: 1408, align: 64, elements: !125)
!125 = !{!126, !138, !143}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "semver", scope: !121, baseType: !127, size: 896, align: 64)
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemanticVersion.Range", size: 896, align: 64, elements: !128)
!128 = !{!129, !137}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !127, baseType: !130, size: 448, align: 64)
!130 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemanticVersion", size: 448, align: 64, elements: !131)
!131 = !{!132, !133, !134, !135, !136}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !130, baseType: !37, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !130, baseType: !37, size: 64, align: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "patch", scope: !130, baseType: !37, size: 64, align: 64, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "pre", scope: !130, baseType: !31, size: 128, align: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !130, baseType: !31, size: 128, align: 64, offset: 320)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !127, baseType: !130, size: 448, align: 64, offset: 448)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "linux", scope: !121, baseType: !139, size: 1344, align: 64)
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Os.LinuxVersionRange", size: 1344, align: 64, elements: !140)
!140 = !{!141, !142}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !139, baseType: !127, size: 896, align: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "glibc", scope: !139, baseType: !130, size: 448, align: 64, offset: 896)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !121, baseType: !144, size: 64, align: 32)
!144 = !DICompositeType(tag: DW_TAG_structure_type, name: "target.Target.Os.WindowsVersion.Range", size: 64, align: 32, elements: !145)
!145 = !{!146, !147}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !144, baseType: !117, size: 32, align: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !144, baseType: !117, size: 32, align: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !121, baseType: !149, size: 8, align: 8, offset: 1344)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "@typeInfo(target.Target.Os.VersionRange).Union.tag_type.?", scope: !121, file: !23, line: 698, baseType: !112, size: 8, align: 8, elements: !150)
!150 = !{!151, !152, !153, !154}
!151 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "semver", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "linux", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "windows", value: 3, isUnsigned: true)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !118, baseType: !156, size: 8, align: 8, offset: 1408)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "target.Target.Os.Tag", scope: !118, file: !23, line: 192, baseType: !48, size: 8, align: 8, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201}
!158 = !DIEnumerator(name: "freestanding", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "ananas", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "cloudabi", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "dragonfly", value: 3, isUnsigned: true)
!162 = !DIEnumerator(name: "freebsd", value: 4, isUnsigned: true)
!163 = !DIEnumerator(name: "fuchsia", value: 5, isUnsigned: true)
!164 = !DIEnumerator(name: "ios", value: 6, isUnsigned: true)
!165 = !DIEnumerator(name: "kfreebsd", value: 7, isUnsigned: true)
!166 = !DIEnumerator(name: "linux", value: 8, isUnsigned: true)
!167 = !DIEnumerator(name: "lv2", value: 9, isUnsigned: true)
!168 = !DIEnumerator(name: "macos", value: 10, isUnsigned: true)
!169 = !DIEnumerator(name: "netbsd", value: 11, isUnsigned: true)
!170 = !DIEnumerator(name: "openbsd", value: 12, isUnsigned: true)
!171 = !DIEnumerator(name: "solaris", value: 13, isUnsigned: true)
!172 = !DIEnumerator(name: "windows", value: 14, isUnsigned: true)
!173 = !DIEnumerator(name: "zos", value: 15, isUnsigned: true)
!174 = !DIEnumerator(name: "haiku", value: 16, isUnsigned: true)
!175 = !DIEnumerator(name: "minix", value: 17, isUnsigned: true)
!176 = !DIEnumerator(name: "rtems", value: 18, isUnsigned: true)
!177 = !DIEnumerator(name: "nacl", value: 19, isUnsigned: true)
!178 = !DIEnumerator(name: "aix", value: 20, isUnsigned: true)
!179 = !DIEnumerator(name: "cuda", value: 21, isUnsigned: true)
!180 = !DIEnumerator(name: "nvcl", value: 22, isUnsigned: true)
!181 = !DIEnumerator(name: "amdhsa", value: 23, isUnsigned: true)
!182 = !DIEnumerator(name: "ps4", value: 24, isUnsigned: true)
!183 = !DIEnumerator(name: "ps5", value: 25, isUnsigned: true)
!184 = !DIEnumerator(name: "elfiamcu", value: 26, isUnsigned: true)
!185 = !DIEnumerator(name: "tvos", value: 27, isUnsigned: true)
!186 = !DIEnumerator(name: "watchos", value: 28, isUnsigned: true)
!187 = !DIEnumerator(name: "driverkit", value: 29, isUnsigned: true)
!188 = !DIEnumerator(name: "mesa3d", value: 30, isUnsigned: true)
!189 = !DIEnumerator(name: "contiki", value: 31, isUnsigned: true)
!190 = !DIEnumerator(name: "amdpal", value: 32, isUnsigned: true)
!191 = !DIEnumerator(name: "hermit", value: 33, isUnsigned: true)
!192 = !DIEnumerator(name: "hurd", value: 34, isUnsigned: true)
!193 = !DIEnumerator(name: "wasi", value: 35, isUnsigned: true)
!194 = !DIEnumerator(name: "emscripten", value: 36, isUnsigned: true)
!195 = !DIEnumerator(name: "shadermodel", value: 37, isUnsigned: true)
!196 = !DIEnumerator(name: "uefi", value: 38, isUnsigned: true)
!197 = !DIEnumerator(name: "opencl", value: 39, isUnsigned: true)
!198 = !DIEnumerator(name: "glsl450", value: 40, isUnsigned: true)
!199 = !DIEnumerator(name: "vulkan", value: 41, isUnsigned: true)
!200 = !DIEnumerator(name: "plan9", value: 42, isUnsigned: true)
!201 = !DIEnumerator(name: "other", value: 43, isUnsigned: true)
!202 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!203 = !{!204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222}
!204 = !DIEnumerator(name: "nt4", value: 67108864, isUnsigned: true)
!205 = !DIEnumerator(name: "win2k", value: 83886080, isUnsigned: true)
!206 = !DIEnumerator(name: "xp", value: 83951616, isUnsigned: true)
!207 = !DIEnumerator(name: "ws2003", value: 84017152, isUnsigned: true)
!208 = !DIEnumerator(name: "vista", value: 100663296, isUnsigned: true)
!209 = !DIEnumerator(name: "win7", value: 100728832, isUnsigned: true)
!210 = !DIEnumerator(name: "win8", value: 100794368, isUnsigned: true)
!211 = !DIEnumerator(name: "win8_1", value: 100859904, isUnsigned: true)
!212 = !DIEnumerator(name: "win10", value: 167772160, isUnsigned: true)
!213 = !DIEnumerator(name: "win10_th2", value: 167772161, isUnsigned: true)
!214 = !DIEnumerator(name: "win10_rs1", value: 167772162, isUnsigned: true)
!215 = !DIEnumerator(name: "win10_rs2", value: 167772163, isUnsigned: true)
!216 = !DIEnumerator(name: "win10_rs3", value: 167772164, isUnsigned: true)
!217 = !DIEnumerator(name: "win10_rs4", value: 167772165, isUnsigned: true)
!218 = !DIEnumerator(name: "win10_rs5", value: 167772166, isUnsigned: true)
!219 = !DIEnumerator(name: "win10_19h1", value: 167772167, isUnsigned: true)
!220 = !DIEnumerator(name: "win10_vb", value: 167772168, isUnsigned: true)
!221 = !DIEnumerator(name: "win10_mn", value: 167772169, isUnsigned: true)
!222 = !DIEnumerator(name: "win10_fe", value: 167772170, isUnsigned: true)
!223 = !{!224, !227, !229, !232, !234, !238, !240, !242, !244, !246, !248, !253, !255, !257, !262, !264}
!224 = !DIGlobalVariableExpression(var: !225, expr: !DIExpression())
!225 = distinct !DIGlobalVariable(name: "zig_backend", linkageName: "builtin.zig_backend", scope: !226, file: !226, line: 6, type: !6, isLocal: true, isDefinition: true)
!226 = !DIFile(filename: "builtin.zig", directory: "C:\\dev\\zig_kernel\\zig-cache\\o\\c3de15adbb26e1df953b5a59e57e3806")
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "empty", linkageName: "target.Target.Cpu.Feature.Set.empty", scope: !23, file: !23, line: 701, type: !40, isLocal: true, isDefinition: true)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "x86_64", linkageName: "target.x86.cpu.x86_64", scope: !231, file: !231, line: 3624, type: !28, isLocal: true, isDefinition: true)
!231 = !DIFile(filename: "x86.zig", directory: "C:\\bin\\lib\\std\\target")
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "cpu", linkageName: "builtin.cpu", scope: !226, file: !226, line: 13, type: !24, isLocal: true, isDefinition: true)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "simplified_logic", linkageName: "start.simplified_logic", scope: !236, file: !236, line: 19, type: !237, isLocal: true, isDefinition: true)
!236 = !DIFile(filename: "start.zig", directory: "C:\\bin\\lib\\std")
!237 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!238 = !DIGlobalVariableExpression(var: !239, expr: !DIExpression())
!239 = distinct !DIGlobalVariable(name: "output_mode", linkageName: "builtin.output_mode", scope: !226, file: !226, line: 8, type: !111, isLocal: true, isDefinition: true)
!240 = !DIGlobalVariableExpression(var: !241, expr: !DIExpression())
!241 = distinct !DIGlobalVariable(name: "link_libc", linkageName: "builtin.link_libc", scope: !226, file: !226, line: 45, type: !237, isLocal: true, isDefinition: true)
!242 = !DIGlobalVariableExpression(var: !243, expr: !DIExpression())
!243 = distinct !DIGlobalVariable(name: "os", linkageName: "builtin.os", scope: !226, file: !226, line: 33, type: !118, isLocal: true, isDefinition: true)
!244 = !DIGlobalVariableExpression(var: !245, expr: !DIExpression())
!245 = distinct !DIGlobalVariable(name: "native_os", linkageName: "start.native_os", scope: !236, file: !236, line: 10, type: !156, isLocal: true, isDefinition: true)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "native_arch", linkageName: "start.native_arch", scope: !236, file: !236, line: 9, type: !22, isLocal: true, isDefinition: true)
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(name: "register_isr", linkageName: "lib.isr.register_isr", scope: !250, file: !250, line: 90, type: !251, isLocal: true, isDefinition: true)
!250 = !DIFile(filename: "lib.zig", directory: "C:\\dev\\zig_kernel\\src")
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*anyopaque", baseType: !252, size: 64, align: 8)
!252 = !DIBasicType(name: "anyopaque", encoding: DW_ATE_signed)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "kernel_func", linkageName: "lib.name.kernel_func", scope: !250, file: !250, line: 111, type: !251, isLocal: true, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "yield", linkageName: "lib.task.yield", scope: !250, file: !250, line: 103, type: !251, isLocal: true, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "x86_64__anon_515", linkageName: "target.x86.cpu.x86_64__anon_515", scope: !231, file: !231, line: 3624, type: !259, isLocal: true, isDefinition: true)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 56, align: 8, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 6, lowerBound: 0)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "x86_64__anon_516", linkageName: "target.x86.cpu.x86_64__anon_516", scope: !231, file: !231, line: 3624, type: !259, isLocal: true, isDefinition: true)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "main__anon_975", linkageName: "main.main__anon_975", scope: !266, file: !266, line: 16, type: !267, isLocal: true, isDefinition: true)
!266 = !DIFile(filename: "main.zig", directory: "C:\\dev\\zig_kernel\\drivers\\block\\ps2\\src")
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 32, align: 8, elements: !268)
!268 = !{!269}
!269 = !DISubrange(count: 3, lowerBound: 0)
!270 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !266, file: !266, line: 16, type: !271, scopeLine: 16, flags: DIFlagStaticMember, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !274)
!271 = !DISubroutineType(types: !272)
!272 = !{!273}
!273 = !DIBasicType(name: "void", encoding: DW_ATE_signed)
!274 = !{!275}
!275 = !DILocalVariable(name: "v", scope: !276, file: !266, line: 18, type: !277)
!276 = distinct !DILexicalBlock(scope: !270, file: !266)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[3:0]u8", baseType: !267, size: 64, align: 8)
!278 = !DILocation(line: 17, column: 32, scope: !276)
!279 = !DILocation(line: 18, column: 5, scope: !276)
!280 = !DILocation(line: 22, column: 32, scope: !281)
!281 = distinct !DILexicalBlock(scope: !282, file: !266, line: 21, column: 18)
!282 = distinct !DILexicalBlock(scope: !270, file: !266, line: 21, column: 12)
!283 = distinct !DISubprogram(name: "handler", linkageName: "main.handler", scope: !266, file: !266, line: 9, type: !284, scopeLine: 9, flags: DIFlagStaticMember, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !303)
!284 = !DISubroutineType(types: !285)
!285 = !{!237, !286}
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*lib.isr.ISRFrame", baseType: !287, size: 64, align: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "lib.isr.ISRFrame", size: 896, align: 64, elements: !288)
!288 = !{!289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !287, baseType: !8, size: 64, align: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !287, baseType: !8, size: 64, align: 64, offset: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !287, baseType: !8, size: 64, align: 64, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !287, baseType: !8, size: 64, align: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !287, baseType: !8, size: 64, align: 64, offset: 256)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !287, baseType: !8, size: 64, align: 64, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !287, baseType: !8, size: 64, align: 64, offset: 384)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !287, baseType: !8, size: 64, align: 64, offset: 448)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !287, baseType: !8, size: 64, align: 64, offset: 512)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !287, baseType: !8, size: 64, align: 64, offset: 576)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !287, baseType: !8, size: 64, align: 64, offset: 640)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "rflags", scope: !287, baseType: !8, size: 64, align: 64, offset: 704)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !287, baseType: !8, size: 64, align: 64, offset: 768)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !287, baseType: !8, size: 64, align: 64, offset: 832)
!303 = !{!304, !305}
!304 = !DILocalVariable(name: "frame", arg: 1, scope: !283, file: !266, line: 9, type: !286)
!305 = !DILocalVariable(name: "port", scope: !306, file: !266, line: 11, type: !307)
!306 = distinct !DILexicalBlock(scope: !283, file: !266)
!307 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!308 = !DILocation(line: 9, column: 46, scope: !283)
!309 = !DILocation(line: 11, column: 23, scope: !306)
!310 = !DILocation(line: 11, column: 14, scope: !311)
!311 = distinct !DILexicalBlock(scope: !312, file: !266, line: 10, column: 13)
!312 = distinct !DILexicalBlock(scope: !306, file: !266, line: 11, column: 23)
!313 = !DILocation(line: 13, column: 5, scope: !306)
!314 = distinct !DISubprogram(name: "driver_main_stub", linkageName: "driver_main_stub", scope: !315, file: !315, line: 12, type: !271, scopeLine: 12, flags: DIFlagStaticMember, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !316)
!315 = !DIFile(filename: "lib.zig", directory: "C:\\dev\\zig_kernel\\drivers\\src")
!316 = !{}
!317 = !DILocation(line: 13, column: 9, scope: !318)
!318 = distinct !DILexicalBlock(scope: !314, file: !315)
